[{"/Users/marchewka/oss/react-native-ios-kit/babel.config.js":"1","/Users/marchewka/oss/react-native-ios-kit/example/App.js":"2","/Users/marchewka/oss/react-native-ios-kit/example/babel.config.js":"3","/Users/marchewka/oss/react-native-ios-kit/example/metro.config.js":"4","/Users/marchewka/oss/react-native-ios-kit/example/src/ExampleList.js":"5","/Users/marchewka/oss/react-native-ios-kit/example/src/ThemeSelector.js":"6","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/Avatars.js":"7","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/Buttons.js":"8","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/Collection.js":"9","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/GroupedList.js":"10","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/Icons.js":"11","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/PageControl.js":"12","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/PageControlView.js":"13","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/SearchBar.js":"14","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/SegmentedControl.js":"15","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/Slider.js":"16","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/Spinners.js":"17","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/Stepper.js":"18","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/Switch.js":"19","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/TabBar.js":"20","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/TableView.js":"21","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/TextField.js":"22","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/Toolbar.js":"23","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/Typography.js":"24","/Users/marchewka/oss/react-native-ios-kit/example/src/withSafeArea.js":"25","/Users/marchewka/oss/react-native-ios-kit/src/components/Avatar.js":"26","/Users/marchewka/oss/react-native-ios-kit/src/components/Button.js":"27","/Users/marchewka/oss/react-native-ios-kit/src/components/CheckboxRow.js":"28","/Users/marchewka/oss/react-native-ios-kit/src/components/Collection.js":"29","/Users/marchewka/oss/react-native-ios-kit/src/components/GroupedList/GroupedList.js":"30","/Users/marchewka/oss/react-native-ios-kit/src/components/GroupedList/Sections.js":"31","/Users/marchewka/oss/react-native-ios-kit/src/components/GroupedList/index.js":"32","/Users/marchewka/oss/react-native-ios-kit/src/components/Icon.js":"33","/Users/marchewka/oss/react-native-ios-kit/src/components/InfoRow.js":"34","/Users/marchewka/oss/react-native-ios-kit/src/components/NavigationRow.js":"35","/Users/marchewka/oss/react-native-ios-kit/src/components/PageControl.js":"36","/Users/marchewka/oss/react-native-ios-kit/src/components/PageControlView.js":"37","/Users/marchewka/oss/react-native-ios-kit/src/components/ProgressBar.js":"38","/Users/marchewka/oss/react-native-ios-kit/src/components/RowItem.js":"39","/Users/marchewka/oss/react-native-ios-kit/src/components/SearchBar.js":"40","/Users/marchewka/oss/react-native-ios-kit/src/components/SegmentedControl.js":"41","/Users/marchewka/oss/react-native-ios-kit/src/components/Slider.js":"42","/Users/marchewka/oss/react-native-ios-kit/src/components/Spinner.js":"43","/Users/marchewka/oss/react-native-ios-kit/src/components/Stepper.js":"44","/Users/marchewka/oss/react-native-ios-kit/src/components/Switch.js":"45","/Users/marchewka/oss/react-native-ios-kit/src/components/SwitchRow.js":"46","/Users/marchewka/oss/react-native-ios-kit/src/components/TabBar.js":"47","/Users/marchewka/oss/react-native-ios-kit/src/components/TableView/TableView.js":"48","/Users/marchewka/oss/react-native-ios-kit/src/components/TableView/TableViewFooter.js":"49","/Users/marchewka/oss/react-native-ios-kit/src/components/TableView/TableViewHeader.js":"50","/Users/marchewka/oss/react-native-ios-kit/src/components/TableView/index.js":"51","/Users/marchewka/oss/react-native-ios-kit/src/components/TextField.js":"52","/Users/marchewka/oss/react-native-ios-kit/src/components/TextFieldRow.js":"53","/Users/marchewka/oss/react-native-ios-kit/src/components/Toolbar.js":"54","/Users/marchewka/oss/react-native-ios-kit/src/components/Typography/StyledText.js":"55","/Users/marchewka/oss/react-native-ios-kit/src/components/Typography/Typography.js":"56","/Users/marchewka/oss/react-native-ios-kit/src/components/Typography/createText.js":"57","/Users/marchewka/oss/react-native-ios-kit/src/components/Typography/index.js":"58","/Users/marchewka/oss/react-native-ios-kit/src/core/ThemeProvider.js":"59","/Users/marchewka/oss/react-native-ios-kit/src/core/theming.js":"60","/Users/marchewka/oss/react-native-ios-kit/src/index.js":"61","/Users/marchewka/oss/react-native-ios-kit/src/styles/DarkTheme.js":"62","/Users/marchewka/oss/react-native-ios-kit/src/styles/DefaultTheme.js":"63","/Users/marchewka/oss/react-native-ios-kit/src/styles/colors.js":"64","/Users/marchewka/oss/react-native-ios-kit/src/types/Theme.js":"65","/Users/marchewka/oss/react-native-ios-kit/types.js":"66"},{"size":77,"mtime":1587463599610,"results":"67","hashOfConfig":"68"},{"size":3276,"mtime":1587463599674,"results":"69","hashOfConfig":"70"},{"size":295,"mtime":1587463599674,"results":"71","hashOfConfig":"70"},{"size":1085,"mtime":1587463599674,"results":"72","hashOfConfig":"70"},{"size":2822,"mtime":1587554715124,"results":"73","hashOfConfig":"70"},{"size":1456,"mtime":1587463599675,"results":"74","hashOfConfig":"70"},{"size":1398,"mtime":1587463599675,"results":"75","hashOfConfig":"70"},{"size":3148,"mtime":1587463599675,"results":"76","hashOfConfig":"70"},{"size":1614,"mtime":1587463599675,"results":"77","hashOfConfig":"70"},{"size":1522,"mtime":1587463599675,"results":"78","hashOfConfig":"70"},{"size":2312,"mtime":1587474470646,"results":"79","hashOfConfig":"70"},{"size":2043,"mtime":1587566769211,"results":"80","hashOfConfig":"70"},{"size":2102,"mtime":1587463599676,"results":"81","hashOfConfig":"70"},{"size":803,"mtime":1587463599676,"results":"82","hashOfConfig":"70"},{"size":1292,"mtime":1587463599676,"results":"83","hashOfConfig":"70"},{"size":1865,"mtime":1587463599676,"results":"84","hashOfConfig":"70"},{"size":1827,"mtime":1587463599677,"results":"85","hashOfConfig":"70"},{"size":2094,"mtime":1587463599677,"results":"86","hashOfConfig":"70"},{"size":1218,"mtime":1587474470647,"results":"87","hashOfConfig":"70"},{"size":1696,"mtime":1587463599677,"results":"88","hashOfConfig":"70"},{"size":3006,"mtime":1587463599677,"results":"89","hashOfConfig":"70"},{"size":1120,"mtime":1587474470647,"results":"90","hashOfConfig":"70"},{"size":1247,"mtime":1587463599677,"results":"91","hashOfConfig":"70"},{"size":1124,"mtime":1587463599678,"results":"92","hashOfConfig":"70"},{"size":447,"mtime":1587463599678,"results":"93","hashOfConfig":"70"},{"size":2100,"mtime":1587564276508,"results":"94","hashOfConfig":"68"},{"size":4754,"mtime":1587567072915,"results":"95","hashOfConfig":"68"},{"size":799,"mtime":1587463599683,"results":"96","hashOfConfig":"68"},{"size":3306,"mtime":1587566436530,"results":"97","hashOfConfig":"68"},{"size":5223,"mtime":1587566145674,"results":"98","hashOfConfig":"68"},{"size":4680,"mtime":1587474470654,"results":"99","hashOfConfig":"68"},{"size":41,"mtime":1587463599684,"results":"100","hashOfConfig":"68"},{"size":2090,"mtime":1587562529550,"results":"101","hashOfConfig":"68"},{"size":609,"mtime":1587463599684,"results":"102","hashOfConfig":"68"},{"size":1198,"mtime":1587463599684,"results":"103","hashOfConfig":"68"},{"size":2476,"mtime":1587566049091,"results":"104","hashOfConfig":"68"},{"size":3390,"mtime":1587463599685,"results":"105","hashOfConfig":"68"},{"size":519,"mtime":1587463599685,"results":"106","hashOfConfig":"68"},{"size":3460,"mtime":1587562541345,"results":"107","hashOfConfig":"68"},{"size":6653,"mtime":1587474470654,"results":"108","hashOfConfig":"68"},{"size":1167,"mtime":1587474470655,"results":"109","hashOfConfig":"68"},{"size":2338,"mtime":1587463599686,"results":"110","hashOfConfig":"68"},{"size":785,"mtime":1587463599686,"results":"111","hashOfConfig":"68"},{"size":5487,"mtime":1587463599686,"results":"112","hashOfConfig":"68"},{"size":937,"mtime":1587463599686,"results":"113","hashOfConfig":"68"},{"size":647,"mtime":1587463599686,"results":"114","hashOfConfig":"68"},{"size":2744,"mtime":1587463599686,"results":"115","hashOfConfig":"68"},{"size":1935,"mtime":1587463599687,"results":"116","hashOfConfig":"68"},{"size":1346,"mtime":1587463599687,"results":"117","hashOfConfig":"68"},{"size":984,"mtime":1587463599687,"results":"118","hashOfConfig":"68"},{"size":64,"mtime":1587463599687,"results":"119","hashOfConfig":"68"},{"size":2229,"mtime":1587463599687,"results":"120","hashOfConfig":"68"},{"size":1482,"mtime":1587564339881,"results":"121","hashOfConfig":"68"},{"size":2481,"mtime":1587463599688,"results":"122","hashOfConfig":"68"},{"size":1434,"mtime":1587463599688,"results":"123","hashOfConfig":"68"},{"size":1133,"mtime":1587463599688,"results":"124","hashOfConfig":"68"},{"size":320,"mtime":1587463599688,"results":"125","hashOfConfig":"68"},{"size":153,"mtime":1587463599688,"results":"126","hashOfConfig":"68"},{"size":403,"mtime":1587463599688,"results":"127","hashOfConfig":"68"},{"size":342,"mtime":1587463599689,"results":"128","hashOfConfig":"68"},{"size":1821,"mtime":1587474470655,"results":"129","hashOfConfig":"68"},{"size":602,"mtime":1587566769214,"results":"130","hashOfConfig":"68"},{"size":616,"mtime":1587566769214,"results":"131","hashOfConfig":"68"},{"size":713,"mtime":1587463599690,"results":"132","hashOfConfig":"68"},{"size":321,"mtime":1587474470655,"results":"133","hashOfConfig":"68"},{"size":100,"mtime":1587463599690,"results":"134","hashOfConfig":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gtbzrr",{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},"xy1x78",{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/marchewka/oss/react-native-ios-kit/babel.config.js",[],"/Users/marchewka/oss/react-native-ios-kit/example/App.js",["292"],"// @flow\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { AsyncStorage, StatusBar } from 'react-native';\nimport {\n  ThemeProvider,\n  DefaultTheme,\n  DarkTheme,\n  Button,\n} from 'react-native-ios-kit';\nimport type { Theme } from 'react-native-ios-kit/types';\nimport { NavigationContainer } from '@react-navigation/native';\n\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport ExampleList, { examples } from './src/ExampleList';\nimport ThemeSelector from './src/ThemeSelector';\n\nconst Stack = createStackNavigator();\n\nconst PREFERENCES_KEY = 'APP_PREFERENCES';\n\nexport default function App() {\n  const [theme, setTheme] = useState<Theme>(DefaultTheme);\n\n  const selectTheme = (selectedTheme: 'dark' | 'light') => {\n    setTheme(selectedTheme === 'dark' ? DarkTheme : DefaultTheme);\n  };\n\n  const openThemesScreen = useCallback(navigation => {\n    navigation.navigate('ThemeSelector', {\n      selectTheme,\n    });\n  }, []);\n\n  useEffect(() => {\n    StatusBar.setBarStyle(\n      theme === DefaultTheme ? 'dark-content' : 'light-content'\n    );\n  }, [theme]);\n\n  useEffect(() => {\n    const restorePrefs = async () => {\n      try {\n        const prefString = await AsyncStorage.getItem(PREFERENCES_KEY);\n        const preferences = JSON.parse(prefString || '');\n        if (preferences) {\n          setTheme(preferences.theme === 'dark' ? DarkTheme : DefaultTheme);\n        }\n      } catch (e) {\n        // ignore error\n      }\n    };\n\n    restorePrefs();\n  }, []);\n\n  useEffect(() => {\n    const savePrefs = async () => {\n      try {\n        await AsyncStorage.setItem(\n          PREFERENCES_KEY,\n          JSON.stringify({\n            theme: theme === DarkTheme ? 'dark' : 'light',\n          })\n        );\n      } catch (e) {\n        // ignore error\n      }\n    };\n\n    savePrefs();\n  }, [theme]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <SafeAreaProvider>\n        <NavigationContainer>\n          <Stack.Navigator\n            screenOptions={{\n              headerStyle: {\n                backgroundColor: theme.barColor,\n              },\n              headerTitleStyle: {\n                color: theme.textColor,\n              },\n              cardStyle: {\n                backgroundColor: theme.backgroundColor,\n              },\n            }}\n          >\n            <Stack.Screen\n              name=\"React Native iOS Kit\"\n              component={ExampleList}\n              options={({ navigation }) => ({\n                headerRight: () => (\n                  <Button\n                    color=\"#007aff\"\n                    onPress={() => openThemesScreen(navigation)}\n                    style={{ paddingRight: 15 }}\n                  >\n                    Theme\n                  </Button>\n                ),\n              })}\n            />\n            <Stack.Screen name=\"ThemeSelector\" component={ThemeSelector} />\n            {examples.map(example => (\n              <Stack.Screen\n                key={example.title}\n                name={example.title}\n                component={example.component}\n              />\n            ))}\n          </Stack.Navigator>\n        </NavigationContainer>\n      </SafeAreaProvider>\n    </ThemeProvider>\n  );\n}\n","/Users/marchewka/oss/react-native-ios-kit/example/babel.config.js",[],"/Users/marchewka/oss/react-native-ios-kit/example/metro.config.js",[],"/Users/marchewka/oss/react-native-ios-kit/example/src/ExampleList.js",["293"],"/* @flow */\n\nimport * as React from 'react';\nimport { FlatList } from 'react-native';\nimport { useTheme, NavigationRow } from 'react-native-ios-kit';\nimport { useSafeArea } from 'react-native-safe-area-context';\nimport { StackNavigationProp } from '@react-navigation/stack';\n\nimport Buttons from './scenes/Buttons';\nimport Avatars from './scenes/Avatars';\nimport Typography from './scenes/Typography';\nimport TabBar from './scenes/TabBar';\nimport Toolbar from './scenes/Toolbar';\nimport PageControl from './scenes/PageControl';\nimport PageControlView from './scenes/PageControlView';\nimport Stepper from './scenes/Stepper';\nimport SearchBar from './scenes/SearchBar';\nimport Switch from './scenes/Switch';\nimport SegmentedControl from './scenes/SegmentedControl';\nimport TableView from './scenes/TableView';\nimport Slider from './scenes/Slider';\nimport TextField from './scenes/TextField';\nimport Icons from './scenes/Icons';\nimport GroupedList from './scenes/GroupedList';\nimport Collection from './scenes/Collection';\nimport Spinners from './scenes/Spinners';\n\ntype Route = {\n  component: any,\n  title: string,\n};\n\nexport const examples = [\n  {\n    component: Avatars,\n    title: 'Avatars',\n  },\n  {\n    component: Buttons,\n    title: 'Buttons',\n  },\n  {\n    component: GroupedList,\n    title: 'GroupedList',\n  },\n  {\n    component: Collection,\n    title: 'Collection',\n  },\n  {\n    component: Icons,\n    title: 'Icons',\n  },\n  {\n    component: PageControl,\n    title: 'PageControl',\n  },\n  {\n    component: PageControlView,\n    title: 'PageControlView',\n  },\n  {\n    component: SearchBar,\n    title: 'SearchBar',\n  },\n  {\n    component: SegmentedControl,\n    title: 'SegmentedControl',\n  },\n  {\n    component: Slider,\n    title: 'Slider',\n  },\n  {\n    component: Spinners,\n    title: 'Spinners',\n  },\n  {\n    component: Stepper,\n    title: 'Stepper',\n  },\n  {\n    component: Switch,\n    title: 'Switch',\n  },\n  {\n    component: TabBar,\n    title: 'TabBar',\n  },\n  {\n    component: Toolbar,\n    title: 'Toolbar',\n  },\n  {\n    component: TableView,\n    title: 'TableView',\n  },\n  {\n    component: TextField,\n    title: 'TextField',\n  },\n  {\n    component: Typography,\n    title: 'Typography',\n  },\n];\n\ntype Props = {\n  navigation: StackNavigationProp<{}>,\n};\n\nexport default function ExampleList({ navigation }: Props) {\n  const theme = useTheme();\n  const safeArea = useSafeArea();\n\n  const _onPressRow = (route: Route) => {\n    navigation.navigate(route.title);\n  };\n\n  return (\n    <FlatList\n      data={examples}\n      renderItem={({ item }) => (\n        <NavigationRow title={item.title} onPress={() => _onPressRow(item)} />\n      )}\n      keyExtractor={item => item.title}\n      contentContainerStyle={{\n        paddingBottom: safeArea.bottom,\n        backgroundColor: theme.backgroundColor,\n      }}\n    />\n  );\n}\n","/Users/marchewka/oss/react-native-ios-kit/example/src/ThemeSelector.js",[],"/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/Avatars.js",["294"],"/* @flow */\nimport * as React from 'react';\nimport { View, StyleSheet, Alert } from 'react-native';\n\nimport { Avatar, withTheme, Body } from 'react-native-ios-kit';\n\nimport withSafeArea from '../withSafeArea';\nimport type { Theme } from 'react-native-ios-kit/types';\n\ntype Props = {\n  theme: Theme,\n};\n\nclass AvatarExample extends React.Component<Props> {\n  render() {\n    return (\n      <View>\n        <View style={styles.row}>\n          <Body>Default</Body>\n          <Avatar />\n        </View>\n        <View style={styles.row}>\n          <Body>Url prop</Body>\n          <Avatar url=\"https://callstack.com/images/favicon/favicon-32x32.png\" />\n        </View>\n        <View style={styles.row}>\n          <Body>Initials</Body>\n          <Avatar initials=\"CK\" />\n        </View>\n        <View style={styles.row}>\n          <Body>With onPress handler</Body>\n          <Avatar\n            url=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQCIl1UiHXVbyY2UVAWE6aflhrlA7CN8BGv4Ej7lkWp0wnJtody\"\n            onPress={() => Alert.alert('Hello')}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default withTheme(withSafeArea(AvatarExample));\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    padding: 10,\n    borderBottomColor: '#333',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n});\n","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/Buttons.js",["295"],"/* @flow */\n\nimport React, { Component } from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { Button, withTheme } from 'react-native-ios-kit';\nimport type { Theme } from 'react-native-ios-kit/types';\nimport withSafeArea from '../withSafeArea';\n\ntype Props = {\n  theme: Theme,\n};\n\nclass Buttons extends Component<Props> {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Button inline style={styles.button}>\n          Button (inline)\n        </Button>\n        <Button disabled style={styles.button}>\n          Button disabled\n        </Button>\n        <Button inline centered color={customColor} style={styles.button}>\n          Button (inline/centered)\n        </Button>\n        <Button disabled centered color={customColor} style={styles.button}>\n          Button (centered/disabled)\n        </Button>\n        <Button style={styles.button} inline rounded>\n          Button (inline/rounded)\n        </Button>\n        <Button style={styles.button} rounded>\n          Button (rounded)\n        </Button>\n        <Button style={styles.button} rounded disabled>\n          Button (rounded/disabled)\n        </Button>\n        <View style={styles.combineButtonsContainer}>\n          <Button\n            rounded\n            style={[styles.roundedButton, styles.roundedButtonLeft]}\n          >\n            Button (rounded)\n          </Button>\n          <Button\n            rounded\n            inverted\n            style={[styles.roundedButton, styles.roundedButtonRight]}\n          >\n            Button (rounded/inverted)\n          </Button>\n        </View>\n        <View style={styles.combineButtonsContainer}>\n          <Button\n            rounded\n            style={[styles.roundedButton, styles.roundedButtonLeft]}\n          >\n            Button (rounded)\n          </Button>\n          <Button\n            rounded\n            inverted\n            disabled\n            style={[styles.roundedButton, styles.roundedButtonRight]}\n          >\n            Button (rounded/disabled)\n          </Button>\n        </View>\n        <Button\n          centered\n          color={customColor}\n          style={[styles.button, styles.customBorder]}\n        >\n          Custom button + centered\n        </Button>\n        <Button\n          centered\n          disabled\n          color={customColor}\n          style={[styles.button, styles.customBorder]}\n          disabledStyle={styles.customDisabledBorder}\n        >\n          Custom button (centered/disabled)\n        </Button>\n      </View>\n    );\n  }\n}\n\nexport default withTheme(withSafeArea(Buttons));\n\nconst customColor = '#FF3A30';\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    paddingHorizontal: 15,\n  },\n  button: {\n    marginVertical: 5,\n  },\n  combineButtonsContainer: {\n    flexDirection: 'row',\n    marginVertical: 5,\n  },\n  roundedButton: {\n    flex: 1,\n  },\n  roundedButtonLeft: {\n    marginRight: 5,\n  },\n  roundedButtonRight: {\n    marginLeft: 5,\n  },\n  customBorder: {\n    borderWidth: 1,\n    borderColor: customColor,\n    paddingVertical: 10,\n  },\n  customDisabledBorder: {\n    borderColor: '#cdcdcd',\n  },\n});\n","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/Collection.js",["296"],"/* @flow */\nimport * as React from 'react';\nimport { Image, StyleSheet } from 'react-native';\nimport { Collection, withTheme, Title1 } from 'react-native-ios-kit';\n\nimport withSafeArea from '../withSafeArea';\nimport type { Theme } from 'react-native-ios-kit/types';\n\nconst imagesPrefix = 'https://picsum.photos/';\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst data = months.map(month => ({\n  data: [...Array(Math.floor(Math.random() * 15) + 2)].map(\n    () => `${imagesPrefix}${Math.floor(Math.random() * 100) + 200}`\n  ),\n  title: month,\n}));\n\ntype Props = {\n  theme: Theme,\n};\n\ntype State = {\n  refreshing: boolean,\n};\nclass CollectionExample extends React.Component<Props, State> {\n  state = {\n    refreshing: false,\n  };\n  refresh = () => {\n    this.setState({ refreshing: true }, () => {\n      setTimeout(() => this.setState({ refreshing: false }), 1000);\n    });\n  };\n\n  render() {\n    return (\n      <Collection\n        numberOfColumns={4}\n        data={data}\n        renderItem={item => <Image source={{ uri: item }} />}\n        renderSectionHeader={({ section }) => (\n          <Title1 style={styles.sectionHeader}>{section.title}</Title1>\n        )}\n        keyExtractor={(item, index) => `${item}_${index}`}\n        refreshing={this.state.refreshing}\n        onRefresh={this.refresh}\n      />\n    );\n  }\n}\n\nexport default withTheme(withSafeArea(CollectionExample));\n\nconst styles = StyleSheet.create({\n  sectionHeader: {\n    backgroundColor: 'rgba(255,255,255,0.5)',\n  },\n});\n","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/GroupedList.js",["297"],"/* @flow */\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nimport { GroupedList, withTheme, Body } from 'react-native-ios-kit';\n\nimport withSafeArea from '../withSafeArea';\nimport type { Theme } from 'react-native-ios-kit/types';\n\ntype Props = {\n  theme: Theme,\n  navigator: Object,\n};\n\ntype Item = {\n  key: number,\n  name: string,\n  group: string,\n};\n\ntype State = {\n  data: Array<Item>,\n  sections: Array<string>,\n};\n\nclass AvatarExample extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    const mockedData = [...new Array(150)].map((val, idx) => {\n      const group = `${idx % 40}`;\n      const name = `${group} name`;\n      return { key: idx, name, group };\n    });\n\n    const mockedSections = [...new Array(40)].map((i, idx) => idx.toString());\n\n    this.state = {\n      data: mockedData,\n      sections: mockedSections,\n    };\n  }\n\n  state = {\n    data: [],\n    sections: [],\n  };\n\n  groupBy = (item: Item) => item.group;\n\n  renderItem = ({ item }) => (\n    <View style={styles.item}>\n      <Body>{item.name}</Body>\n    </View>\n  );\n\n  render() {\n    return (\n      <View>\n        <GroupedList\n          items={this.state.data}\n          sections={this.state.sections}\n          renderItem={this.renderItem}\n          groupBy={this.groupBy}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  item: {\n    paddingHorizontal: 15,\n    paddingVertical: 5,\n  },\n});\n\nexport default withTheme(withSafeArea(AvatarExample));\n","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/Icons.js",[],"/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/PageControl.js",["298"],"/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/PageControlView.js",["299","300","301","302","303","304","305","306"],"/* @flow */\nimport * as React from 'react';\nimport { StyleSheet, View, Dimensions, ScrollView } from 'react-native';\n\nimport { withTheme, PageControlView, Title1, Icon } from 'react-native-ios-kit';\nimport type { Theme } from 'react-native-ios-kit/types';\nimport withSafeArea from '../withSafeArea';\n\ntype Props = {\n  theme: Theme,\n};\n\nconst { height } = Dimensions.get('window');\n\nclass PageControlViewExample extends React.Component<Props> {\n  render() {\n    return (\n      <PageControlView startPage={1} onPageChange={() => {}}>\n        <View style={styles.firstContainer}>\n          <Title1>First page.</Title1>\n          <View style={styles.row}>\n            <Icon\n              style={{ paddingHorizontal: 20 }}\n              name=\"ios-american-football\"\n            />\n            <Icon style={{ paddingHorizontal: 20 }} name=\"ios-cash\" />\n            <Icon style={{ paddingHorizontal: 20 }} name=\"ios-bowtie\" />\n            <Icon style={{ paddingHorizontal: 20 }} name=\"ios-cloudy-night\" />\n            <Icon style={{ paddingHorizontal: 20 }} name=\"ios-construct\" />\n            <Icon\n              style={{ paddingHorizontal: 20 }}\n              name=\"logo-game-controller-a\"\n            />\n          </View>\n        </View>\n        <ScrollView contentContainerStyle={styles.secondContainer}>\n          <Title1>ScrollView child component.</Title1>\n        </ScrollView>\n        <View style={styles.thirdContainer}>\n          <Title1>Third page.</Title1>\n        </View>\n      </PageControlView>\n    );\n  }\n}\n\nexport default withTheme(withSafeArea(PageControlViewExample));\n\nconst styles = StyleSheet.create({\n  firstContainer: {\n    flexGrow: 1,\n    paddingTop: 20,\n    alignItems: 'center',\n  },\n  row: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 10,\n    justifyContent: 'center',\n  },\n  secondContainer: {\n    flexGrow: 1,\n    backgroundColor: '#007aff',\n    paddingTop: 20,\n    alignItems: 'center',\n    height: 2 * height,\n  },\n  thirdContainer: {\n    flexGrow: 1,\n    backgroundColor: '#ff9500',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/SearchBar.js",[],"/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/SegmentedControl.js",["307"],"/* @flow */\n\nimport React, { Component } from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { SegmentedControl, Body, withTheme } from 'react-native-ios-kit';\nimport type { Theme } from 'react-native-ios-kit/types';\nimport withSafeArea from '../withSafeArea';\n\ntype Props = {\n  theme: Theme,\n};\ntype State = {\n  selectedIndex: number,\n  selectedValue: string,\n};\nclass SegmentedExample extends Component<Props, State> {\n  state = {\n    selectedIndex: 0,\n    selectedValue: 'One',\n  };\n  render() {\n    return (\n      <View style={styles.container}>\n        <SegmentedControl\n          values={['One', 'Two', 'Three']}\n          selectedIndex={this.state.selectedIndex}\n          onValueChange={(value, index) =>\n            this.setState({\n              selectedValue: value,\n              selectedIndex: index,\n            })\n          }\n          style={{ width: 222, alignSelf: 'center' }}\n        />\n        <View style={styles.content}>\n          <Body>index: {this.state.selectedIndex}</Body>\n          <Body>value: {this.state.selectedValue}</Body>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default withTheme(withSafeArea(SegmentedExample));\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 20,\n  },\n  content: {\n    padding: 10,\n  },\n});\n","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/Slider.js",[],"/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/Spinners.js",["308"],"/* @flow */\nimport React, { Component } from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nimport {\n  withTheme,\n  Spinner,\n  ProgressBar,\n  Title1,\n  DefaultTheme,\n} from 'react-native-ios-kit';\nimport type { Theme } from 'react-native-ios-kit/types';\nimport withSafeArea from '../withSafeArea';\n\ntype Props = {\n  theme: Theme,\n};\ntype State = {\n  progress: number,\n};\n\nclass Spinners extends Component<Props, State> {\n  state = {\n    progress: 0,\n  };\n  componentDidMount() {\n    this.animateProgress();\n  }\n  componentWillUnmount() {\n    clearTimeout(this.animate);\n  }\n\n  animate: TimeoutID;\n\n  animateProgress = () => {\n    this.animate = setTimeout(() => {\n      if (this.state.progress < 1) {\n        this.setState(\n          state => ({ progress: state.progress + 0.1 }),\n          this.animateProgress\n        );\n      } else {\n        this.setState({ progress: 0 }, this.animateProgress);\n      }\n    }, 100);\n  };\n\n  render() {\n    return (\n      <View style={styles.screen}>\n        <View style={styles.container}>\n          <Title1>Spinner</Title1>\n          <View style={styles.row}>\n            <Spinner />\n          </View>\n          <View style={styles.row}>\n            <Spinner\n              theme={{ ...DefaultTheme, primaryColor: 'red' }}\n              size=\"large\"\n            />\n          </View>\n        </View>\n        <View style={styles.container}>\n          <Title1 style={{ marginBottom: 25 }}>ProgressBar</Title1>\n          <ProgressBar progress={this.state.progress} />\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default withTheme(withSafeArea(Spinners));\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n  },\n  row: {\n    padding: 5,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  container: {\n    padding: 10,\n  },\n});\n","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/Stepper.js",["309"],"/* @flow */\nimport React, { Component } from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nimport { withTheme, Headline, Subhead, Stepper } from 'react-native-ios-kit';\nimport type { Theme } from 'react-native-ios-kit/types';\n\nimport withSafeArea from '../withSafeArea';\n\ntype Props = {\n  theme: Theme,\n};\ntype State = {\n  value: number,\n  value2: number,\n  value3: number,\n};\n\nclass StepperExample extends Component<Props, State> {\n  state = {\n    value: 5,\n    value2: 0,\n    value3: 0,\n  };\n  render() {\n    return (\n      <View style={styles.screen}>\n        <View style={styles.row}>\n          <View>\n            <Subhead>Min value: 0</Subhead>\n            <Subhead>Max value: 10</Subhead>\n            <Subhead>Start value: 5</Subhead>\n          </View>\n          <Headline>{this.state.value}</Headline>\n          <Stepper\n            value={this.state.value}\n            onValueChange={value => this.setState({ value })}\n            minValue={0}\n            maxValue={10}\n          />\n        </View>\n        <View style={styles.row}>\n          <View>\n            <Subhead>No min. and max. values</Subhead>\n          </View>\n          <Headline>{this.state.value2}</Headline>\n          <Stepper\n            value={this.state.value2}\n            onValueChange={value2 => this.setState({ value2 })}\n          />\n        </View>\n        <View style={styles.row}>\n          <View>\n            <Subhead>No min. and max. values.</Subhead>\n            <Subhead>Step === 2.</Subhead>\n          </View>\n          <Headline>{this.state.value3}</Headline>\n          <Stepper\n            value={this.state.value3}\n            onValueChange={value3 => this.setState({ value3 })}\n            stepValue={2}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default withTheme(withSafeArea(StepperExample));\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n  },\n  row: {\n    padding: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottomColor: '#666',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n  },\n});\n","/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/Switch.js",[],"/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/TabBar.js",[],"/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/TableView.js",[],"/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/TextField.js",[],"/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/Toolbar.js",[],"/Users/marchewka/oss/react-native-ios-kit/example/src/scenes/Typography.js",[],"/Users/marchewka/oss/react-native-ios-kit/example/src/withSafeArea.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/components/Avatar.js",["310","311"],"/* @flow */\nimport * as React from 'react';\nimport {\n  StyleSheet,\n  Image,\n  ImageBackground,\n  View,\n  Text,\n  TouchableOpacity,\n} from 'react-native';\n\nimport type { Theme } from '../types/Theme';\nimport { withTheme } from '../';\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\n\ntype Props = {\n  theme: Theme,\n  initials: string,\n  url?: string,\n  size: number,\n  style?: ViewStyleProp,\n  onPress?: (e: *) => void,\n};\n\nclass Avatar extends React.Component<Props> {\n  static defaultProps = {\n    initials: '',\n    size: 50,\n  };\n  avatarStyles = {\n    width: this.props.size,\n    height: this.props.size,\n    borderRadius: this.props.size / 2,\n  };\n\n  renderTouchableAvatar = () => {\n    return (\n      <TouchableOpacity style={this.avatarStyles} onPress={this.props.onPress}>\n        {this.renderAvatar()}\n      </TouchableOpacity>\n    );\n  };\n\n  renderAvatar = () => {\n    const { url, style, initials, size } = this.props;\n\n    if (url) {\n      return <Image style={this.avatarStyles} source={{ uri: url }} />;\n    }\n    const overlay = require('../assets/avatartGradient.png');\n    return (\n      <ImageBackground\n        imageStyle={this.avatarStyles}\n        style={[this.avatarStyles, style]}\n        source={overlay}\n      >\n        <View\n          style={[\n            styles.letterWrapper,\n            {\n              height: size,\n              width: size,\n              borderRadius: size / 2,\n            },\n          ]}\n        >\n          <Text style={[styles.letters, { fontSize: size / 2.4 }]}>\n            {initials.slice(0, 2)}\n          </Text>\n        </View>\n      </ImageBackground>\n    );\n  };\n\n  render() {\n    const { onPress } = this.props;\n    if (onPress) return this.renderTouchableAvatar();\n    return this.renderAvatar();\n  }\n}\n\nexport default withTheme(Avatar);\n\nconst styles = StyleSheet.create({\n  letterWrapper: {\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n  },\n  letters: {\n    fontFamily: 'ArialRoundedMTBold',\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    color: 'white',\n  },\n});\n","/Users/marchewka/oss/react-native-ios-kit/src/components/Button.js",["312","313","314","315","316","317","318","319","320","321"],"/Users/marchewka/oss/react-native-ios-kit/src/components/CheckboxRow.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/components/Collection.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/components/GroupedList/GroupedList.js",["322","323","324","325","326","327","328","329","330","331","332"],"/* @flow */\n\nimport * as React from 'react';\nimport { View, StyleSheet, SectionList } from 'react-native';\n\nimport Sections from './Sections';\nimport { withTheme } from '../../core/theming';\nimport { Headline } from '../Typography';\n\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport type { Theme } from '../../types/Theme';\n\nconst alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ#'.split('');\n\ntype Props = {\n  theme: Theme,\n  items: Array<any>,\n  groupBy: (item: any) => string,\n  renderItem: (data: { item: *, index: number }) => ?React.Element<*>,\n  renderSectionHeader?: (data: {\n    section: any,\n  }) => ?React.Element<*>,\n  renderSectionFooter?: (data: {\n    section: any,\n  }) => ?React.Element<*>,\n  ItemSeparatorComponent?: React.ComponentType<*>,\n  SectionSeparatorComponent: *,\n  sections?: Array<string>,\n  sectionsStyle?: ViewStyleProp,\n  sectionPrimaryColor?: string,\n  getItemLayout?: (\n    data: any,\n    index: number\n  ) => { length: number, offset: number, index: number },\n  stickySectionHeadersEnabled?: boolean,\n  keyExtractor?: (item: *) => string,\n};\n\ntype State = {\n  dataSource?: Object,\n};\n\nclass GroupedList extends React.PureComponent<Props, State> {\n  sectionList: ?Object = undefined;\n  sectionHeadersHeights: { [key: string]: number } = {};\n\n  groupItems(items: Array<Object>): any {\n    const grouped = items.reduce((acc, item) => {\n      const groupId = this.props.groupBy(item);\n      if (Object.prototype.hasOwnProperty.call(acc, groupId)) {\n        acc[groupId].data.push(item);\n      } else {\n        acc[groupId] = { title: groupId, data: [item] };\n      }\n      return acc;\n    }, {});\n\n    return Object.values(grouped);\n  }\n\n  handleSectionPress = (sectionIdx: number) => {\n    const sections = this.props.sections || alphabet;\n\n    const { index } = sections.reduce(\n      (acc, item, currendIndex) => {\n        const newDelta = Math.abs(sectionIdx - currendIndex);\n        if (newDelta < acc.delta) {\n          return { delta: newDelta, index: currendIndex };\n        }\n        return acc;\n      },\n      { delta: sections.length, index: 0 }\n    );\n\n    if (this.sectionList) {\n      this.sectionList.scrollToLocation({\n        viewOffset:\n          this.props.stickySectionHeadersEnabled !== false\n            ? this.sectionHeadersHeights[sections[index]]\n            : 0,\n        sectionIndex: index,\n        itemIndex: 0,\n        animated: false,\n      });\n    }\n  };\n\n  renderSectionHeader = (data: { section: any }) => {\n    if (this.props.renderSectionHeader) {\n      return (\n        <View\n          onLayout={({\n            nativeEvent: {\n              layout: { height },\n            },\n          }) => this.handleSectionHeaderLayout(height, data)}\n        >\n          {this.props.renderSectionHeader(data)}\n        </View>\n      );\n    }\n\n    return (\n      <View\n        style={[styles.header, { backgroundColor: this.props.theme.barColor }]}\n        onLayout={({\n          nativeEvent: {\n            layout: { height },\n          },\n        }) => this.handleSectionHeaderLayout(height, data)}\n      >\n        <Headline>\n          {data.section &&\n            typeof data.section === 'object' &&\n            data.section.title}\n        </Headline>\n      </View>\n    );\n  };\n\n  handleSectionHeaderLayout = (height: number, data: Object) => {\n    this.sectionHeadersHeights[data.section.title] = height;\n  };\n\n  render() {\n    const {\n      sections,\n      sectionsStyle,\n      sectionPrimaryColor,\n      getItemLayout,\n      ItemSeparatorComponent,\n      SectionSeparatorComponent,\n      items,\n      renderItem,\n      renderSectionFooter,\n      stickySectionHeadersEnabled,\n      keyExtractor,\n    } = this.props;\n\n    const deafultKeyExtractor = item => item.key || item.id;\n\n    const Separator = () => (\n      <View\n        style={[\n          styles.separator,\n          { backgroundColor: this.props.theme.barColor },\n        ]}\n      />\n    );\n\n    return (\n      <View style={styles.container}>\n        <SectionList\n          initialNumToRender={getItemLayout ? 30 : Number.MAX_SAFE_INTEGER}\n          ref={sectionList => {\n            this.sectionList = sectionList;\n          }}\n          renderItem={renderItem}\n          renderSectionFooter={renderSectionFooter}\n          renderSectionHeader={this.renderSectionHeader}\n          ItemSeparatorComponent={ItemSeparatorComponent || Separator}\n          SectionSeparatorComponent={SectionSeparatorComponent}\n          sections={this.groupItems(items)}\n          automaticallyAdjustContentInsets={false}\n          getItemLayout={getItemLayout}\n          stickySectionHeadersEnabled={stickySectionHeadersEnabled}\n          keyExtractor={keyExtractor || deafultKeyExtractor}\n        />\n        <Sections\n          onSectionPress={this.handleSectionPress}\n          items={sections || alphabet}\n          style={sectionsStyle}\n          sectionPrimaryColor={sectionPrimaryColor}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexGrow: 1,\n  },\n  header: {\n    paddingVertical: 5,\n    paddingHorizontal: 15,\n  },\n  separator: {\n    height: 1,\n    marginLeft: 15,\n  },\n});\n\nexport default withTheme(GroupedList);\n","/Users/marchewka/oss/react-native-ios-kit/src/components/GroupedList/Sections.js",["333","334","335"],"/* @flow */\n\nimport React, { PureComponent } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  PanResponder,\n  findNodeHandle,\n  NativeModules,\n} from 'react-native';\n\nimport { withTheme } from '../../core/theming';\n\nimport type { Theme } from '../../types/Theme';\n\nconst SECTION_HEIGHT = 18;\n\ntype Props = {\n  theme: Theme,\n  onSectionPress: (id: number) => void,\n  items: Array<string>,\n  sectionPrimaryColor: ?string,\n  style: ?*,\n};\n\ntype State = {\n  sections: Array<?string>,\n};\n\nclass Sections extends PureComponent<Props, State> {\n  state = {\n    sections: [],\n  };\n\n  UNSAFE_componentWillMount() {\n    this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onStartShouldSetPanResponderCapture: () => true,\n      onMoveShouldSetPanResponder: () => true,\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: this.handleMove,\n      onPanResponderGrant: this.handleMove,\n    });\n  }\n\n  sectionsHeight: ?number;\n  sectionsY: ?number;\n  panResponder: Object;\n  sections: ?any;\n  currentSectionIdx: ?number;\n\n  handleContainerLayout = ({\n    nativeEvent: {\n      layout: { height },\n    },\n  }) => {\n    this.setState({ sections: this.prepareSections(height) });\n  };\n\n  handleLayout = () => {\n    NativeModules.UIManager.measure(\n      findNodeHandle(this.sections),\n      (x, y, width, height, pageX, pageY) => {\n        this.sectionsHeight = height;\n        this.sectionsY = pageY;\n      }\n    );\n  };\n\n  handleMove = ({ nativeEvent: { pageY } }) => {\n    if (!this.sectionsHeight || !this.sectionsY) {\n      return;\n    }\n\n    const sectionIdx = Math.round(\n      ((pageY - this.sectionsY) * this.props.items.length) / this.sectionsHeight\n    );\n    if (\n      sectionIdx >= 0 &&\n      sectionIdx < this.props.items.length &&\n      this.currentSectionIdx !== sectionIdx\n    ) {\n      this.currentSectionIdx = sectionIdx;\n      this.props.onSectionPress(sectionIdx);\n    }\n  };\n\n  prepareSections(parentHeight: number): Array<?string> {\n    const { items } = this.props;\n\n    let slots = (parentHeight - 50) / SECTION_HEIGHT;\n    if (slots >= items.length) {\n      return [...items];\n    }\n\n    if (!(slots % 2)) {\n      slots += 1;\n    }\n\n    const dotsCount = Math.floor(slots / 2);\n    const visibleSectionsCount = slots - dotsCount;\n    const sectionsCountPerDot =\n      (items.length - visibleSectionsCount) / dotsCount;\n\n    let sum = 0;\n    const visibleSections = [items[0], null]; // make first item visible\n    for (let i = 0; i < dotsCount - 1; i++) {\n      sum += 1 + sectionsCountPerDot;\n      const visibleSectionIdx = Math.round(sum);\n      visibleSections.push(items[visibleSectionIdx], null);\n    }\n    visibleSections.push(items[items.length - 1]); // make last item visible\n    // Each null in visbleSections array is a dot\n    return visibleSections;\n  }\n\n  renderSection = (item: any, index: number) => {\n    const { sectionPrimaryColor, theme } = this.props;\n    if (item) {\n      return (\n        <Text\n          key={index}\n          style={[\n            { color: sectionPrimaryColor || theme.primaryColor },\n            styles.section,\n          ]}\n        >\n          {item}\n        </Text>\n      );\n    }\n    return (\n      <View key={index} style={styles.dotContainer}>\n        <View\n          style={[\n            { backgroundColor: sectionPrimaryColor || theme.primaryColor },\n            styles.dot,\n          ]}\n        />\n      </View>\n    );\n  };\n\n  render() {\n    const { style, theme } = this.props;\n    const { sections } = this.state;\n\n    return (\n      <View\n        style={[\n          { backgroundColor: theme.barColor },\n          styles.container,\n          style && style,\n        ]}\n        onLayout={this.handleContainerLayout}\n      >\n        <View\n          style={styles.sections}\n          {...this.panResponder.panHandlers}\n          onLayout={this.handleLayout}\n          ref={view => {\n            this.sections = view;\n          }}\n        >\n          {sections.map(this.renderSection)}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    width: 20,\n    maxWidth: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  sections: {\n    width: 45,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  section: {\n    fontSize: 14,\n    height: SECTION_HEIGHT,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  dotContainer: {\n    height: SECTION_HEIGHT,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  dot: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n  },\n});\n\nexport default withTheme(Sections);\n","/Users/marchewka/oss/react-native-ios-kit/src/components/GroupedList/index.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/components/Icon.js",["336","337"],"/* @flow */\nimport * as React from 'react';\nimport { Image, View, StyleSheet } from 'react-native';\nimport type { ImageSource } from 'react-native/Libraries/Image/ImageSource';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport type { Theme } from '../types/Theme';\nimport { withTheme } from '../';\n\ntype Props = {\n  /**\n   * ImageSource name. Can be one of https://github.com/oblador/react-native-vector-icons/blob/master/glyphmaps/Ionicons.json or source of ReactNative's `image` or any valid React Component\n   */\n  name?: ImageSource,\n  /**\n   * Custom color for icon, default to primary\n   */\n  color?: string,\n  /**\n   * Optional icon size, defaults to 50\n   */\n  size?: number,\n  /**\n   * Custom styles to apply to the Icon\n   */\n  style?: any,\n  /**\n   * Provided by the ThemeProvider\n   */\n  theme: Theme,\n};\n\nclass Icon extends React.Component<Props> {\n  static defaultProps = {\n    size: 50,\n  };\n  render() {\n    const { name, color, size, theme, style, ...rest } = this.props;\n    if (typeof name === 'string') {\n      return (\n        <Ionicons\n          color={color || theme.primaryColor}\n          name={name}\n          size={size}\n          style={style}\n        />\n      );\n    } else if (\n      (typeof name === 'object' &&\n        name !== null &&\n        // eslint-disable-next-line\n        (name.hasOwnProperty('uri') && typeof name.uri === 'string')) ||\n      typeof name === 'number'\n    ) {\n      return (\n        <Image\n          {...rest}\n          source={name}\n          style={[\n            {\n              width: size,\n              height: size,\n            },\n            style,\n          ]}\n        />\n      );\n    }\n    return (\n      <View\n        {...rest}\n        style={[\n          {\n            width: size,\n            height: size,\n          },\n          styles.container,\n          style,\n        ]}\n      >\n        {(name: any)}\n      </View>\n    );\n  }\n}\n\nexport default withTheme(Icon);\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflow: 'hidden',\n  },\n});\n","/Users/marchewka/oss/react-native-ios-kit/src/components/InfoRow.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/components/NavigationRow.js",["338"],"/* @flow */\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport RowItem from './RowItem';\nimport Icon from './Icon';\nimport { withTheme } from '../core/theming';\nimport { Body } from './Typography';\nimport type { Theme } from '../types/Theme';\nimport type { Props as RowProps } from './RowItem';\n\ntype Props = RowProps & {\n  theme: Theme,\n  onPress: void => void,\n  info?: string,\n};\n\nclass NavigationRow extends React.Component<Props> {\n  renderRightComponent = () => {\n    const {\n      info,\n      theme: { placeholderColor },\n    } = this.props;\n    return (\n      <View style={styles.row}>\n        {info ? (\n          <Body style={{ color: placeholderColor, paddingRight: 10 }}>\n            {info}\n          </Body>\n        ) : null}\n        <Icon name=\"ios-arrow-forward\" size={22} color={placeholderColor} />\n      </View>\n    );\n  };\n  render() {\n    const { onPress } = this.props;\n    return (\n      <RowItem\n        onPress={onPress}\n        renderRight={this.renderRightComponent}\n        {...this.props}\n      />\n    );\n  }\n}\n\nexport default withTheme(NavigationRow);\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n  },\n});\n","/Users/marchewka/oss/react-native-ios-kit/src/components/PageControl.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/components/PageControlView.js",["339"],"/* @flow */\nimport * as React from 'react';\nimport { View, StyleSheet, ScrollView, Dimensions } from 'react-native';\n\nimport PageControl from './PageControl';\nimport { withTheme } from '../core/theming';\nimport type { Theme } from '../types/Theme';\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport type { ScrollEvent } from 'react-native/Libraries/Types/CoreEventTypes';\n\nconst { width } = Dimensions.get('window');\n\ntype Props = {\n  theme: Theme,\n  children: React.Node,\n  containerStyle?: ViewStyleProp,\n  startPage?: number,\n  onPageChange?: number => void,\n  currentPageIndicatorTintColor?: string,\n  pageIndicatorTintColor?: string,\n  pageIndicatorSize?: number,\n};\n\ntype State = {\n  currentPage: number,\n};\n\nclass PageControlView extends React.Component<Props, State> {\n  state = {\n    currentPage: this.props.startPage || 0,\n  };\n\n  componentDidMount() {\n    if (this.props.startPage) this.scrollToPage(this.props.startPage);\n  }\n\n  scrollView = undefined;\n\n  handleScroll = (event: ScrollEvent) => {\n    const xOffset = event.nativeEvent.contentOffset.x + 10;\n    const currentPage = Math.floor(xOffset / width);\n    this.setState({ currentPage });\n  };\n\n  handleScrollEnd = (event: ScrollEvent) => {\n    const { onPageChange } = this.props;\n    const xOffset = event.nativeEvent.contentOffset.x + 10;\n    const currentPage = Math.floor(xOffset / width);\n    if (this.state.currentPage === currentPage) {\n      if (onPageChange && typeof onPageChange === 'function')\n        onPageChange(this.state.currentPage);\n    }\n  };\n\n  scrollToPage = (pageNumber: number): void => {\n    if (this.scrollView) this.scrollView.scrollTo({ x: width * pageNumber });\n  };\n\n  render() {\n    const {\n      containerStyle,\n      children,\n      pageIndicatorSize,\n      pageIndicatorTintColor,\n      currentPageIndicatorTintColor,\n    } = this.props;\n    const numberOfPages = React.Children.count(children);\n    return (\n      <View style={[styles.container, containerStyle]}>\n        <ScrollView\n          ref={ref => {\n            this.scrollView = ref;\n          }}\n          automaticallyAdjustContentInsets={false}\n          horizontal\n          snapToInterval={width}\n          decelerationRate=\"fast\"\n          scrollEventThrottle={16}\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          directionalLockEnabled\n          onScroll={this.handleScroll}\n          onMomentumScrollEnd={this.handleScrollEnd}\n        >\n          {React.Children.map(children, child => (\n            <View style={styles.pageStyle}>{child}</View>\n          ))}\n        </ScrollView>\n        <View style={styles.controlsContainer}>\n          <PageControl\n            numberOfPages={numberOfPages}\n            currentPage={this.state.currentPage}\n            updateCurrentPageDisplay={this.scrollToPage}\n            currentPageIndicatorTintColor={currentPageIndicatorTintColor}\n            pageIndicatorTintColor={pageIndicatorTintColor}\n            size={pageIndicatorSize}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default withTheme(PageControlView);\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'relative',\n  },\n  pageStyle: {\n    width,\n  },\n  controlsContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'transparent',\n  },\n});\n","/Users/marchewka/oss/react-native-ios-kit/src/components/ProgressBar.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/components/RowItem.js",["340","341","342","343"],"/* @flow */\nimport * as React from 'react';\nimport { View, StyleSheet, TouchableHighlight } from 'react-native';\nimport type { ImageSource } from 'react-native/Libraries/Image/ImageSource';\n\nimport Icon from './Icon';\nimport { Body, Caption1 } from './Typography/Typography';\nimport { withTheme } from '../core/theming';\nimport type { Theme } from '../types/Theme';\n\nexport type Props = {\n  /**\n   * Provided by the ThemeProvider\n   */\n  theme: Theme,\n  /**\n   * Icon name\n   */\n  icon?: ImageSource,\n  /**\n   * Title string to be displayed\n   */\n  title: string,\n  /**\n   * Optional subtitle string\n   */\n  subtitle?: string,\n  /**\n   * Right Component\n   */\n  rightComponent?: React.ComponentType<*>,\n  /**\n   * Function which should return Element to be rendered on the right side of row\n   */\n  renderRight?: () => ?React.Element<*>,\n  /**\n   * RowItem's onPress handler\n   */\n  onPress?: Function,\n  /**\n   * Internal props\n   */\n  first?: boolean,\n  last?: boolean,\n};\n\nclass RowItem extends React.Component<Props> {\n  renderRight = () => {\n    const { renderRight, rightComponent } = this.props;\n\n    if (renderRight) {\n      return <View style={styles.rightComponent}>{renderRight()}</View>;\n    }\n\n    if (rightComponent) {\n      return (\n        <View style={styles.rightComponent}>\n          {React.createElement(rightComponent)}\n        </View>\n      );\n    }\n\n    return null;\n  };\n\n  renderRow = () => {\n    const { icon, title, subtitle, theme, first, last } = this.props;\n\n    return (\n      <View\n        style={[\n          styles.row,\n          {\n            backgroundColor: theme.barColor,\n            borderTopWidth: first ? StyleSheet.hairlineWidth : 0,\n            borderBottomWidth: last ? StyleSheet.hairlineWidth : 0,\n            borderColor: theme.dividerColor,\n          },\n        ]}\n      >\n        {icon && <Icon name={icon} size={30} color={theme.primaryColor} />}\n        <View\n          style={[\n            styles.titleWrapper,\n            {\n              marginLeft: icon ? 15 : 0,\n              marginRight: title || subtitle ? 15 : 0,\n            },\n          ]}\n        >\n          {!!title && <Body>{title}</Body>}\n          {subtitle && <Caption1>{subtitle}</Caption1>}\n        </View>\n        {this.renderRight()}\n      </View>\n    );\n  };\n\n  renderTouchableRow = () => (\n    <TouchableHighlight\n      onPress={this.props.onPress}\n      underlayColor={this.props.theme.footnoteColor}\n      style={{ backgroundColor: this.props.theme.barColor }}\n    >\n      {this.renderRow()}\n    </TouchableHighlight>\n  );\n\n  render() {\n    const { last, onPress, theme, icon } = this.props;\n    return (\n      <View style={{ backgroundColor: theme.barColor }}>\n        {onPress ? this.renderTouchableRow() : this.renderRow()}\n        {!last && (\n          <View\n            style={[\n              styles.separator,\n              {\n                backgroundColor: theme.dividerColor,\n                marginLeft: icon ? 54 : 15,\n              },\n            ]}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default withTheme(RowItem);\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 15,\n    paddingVertical: 4,\n    minHeight: 43,\n  },\n  titleWrapper: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  separator: {\n    height: StyleSheet.hairlineWidth,\n  },\n  rightComponent: {\n    flexGrow: 1,\n    alignItems: 'flex-end',\n  },\n});\n","/Users/marchewka/oss/react-native-ios-kit/src/components/SearchBar.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/components/SegmentedControl.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/components/Slider.js",["344"],"/* @flow */\nimport React, { Component } from 'react';\nimport { Slider, View, StyleSheet } from 'react-native';\nimport type { Theme } from '../types/Theme';\nimport { withTheme } from '../';\nimport Icon from './Icon';\n\ntype Props = {\n  value: number,\n  stepValue: number,\n  minValue?: number,\n  maxValue?: number,\n  minIconName?: string,\n  maxIconName?: string,\n  minIconColor?: string,\n  maxIconColor?: string,\n  minIconSize?: number,\n  maxIconSize?: number,\n  style?: any,\n  theme: Theme,\n  onValueChange: (value: number) => void,\n  onSlidingComplete?: (value: number) => void,\n  minTrackTintColor?: string,\n  maxTrackTintColor?: string,\n};\n\nclass IosSlider extends Component<Props> {\n  static defaultProps = {\n    minValue: 0,\n    maxValue: 100,\n    stepValue: 1,\n    minIconSize: 28,\n    maxIconSize: 35,\n  };\n\n  render() {\n    const {\n      value,\n      minValue,\n      maxValue,\n      stepValue,\n      minIconName,\n      maxIconName,\n      minIconColor,\n      maxIconColor,\n      minIconSize,\n      maxIconSize,\n      theme,\n      style,\n      onValueChange,\n      minTrackTintColor,\n      maxTrackTintColor,\n      ...rest\n    } = this.props;\n    return (\n      <View style={[styles.container, style]}>\n        {minIconName && (\n          <Icon\n            style={styles.icon}\n            name={minIconName}\n            size={minIconSize}\n            color={minIconColor || theme.placeholderColor}\n          />\n        )}\n        <Slider\n          style={styles.slider}\n          value={value}\n          minimumValue={minValue}\n          maximumValue={maxValue}\n          step={stepValue}\n          onValueChange={onValueChange}\n          minimumTrackTintColor={minTrackTintColor || theme.primaryColor}\n          maximumTrackTintColor={maxTrackTintColor || theme.dividerColor}\n          {...rest}\n        />\n        {maxIconName && (\n          <Icon\n            style={styles.icon}\n            name={maxIconName}\n            size={maxIconSize}\n            color={maxIconColor || theme.placeholderColor}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginHorizontal: 10,\n  },\n  slider: {\n    flex: 1,\n    marginLeft: 10,\n    marginRight: 10,\n  },\n  icon: {\n    marginTop: 2,\n  },\n});\n\nexport default withTheme(IosSlider);\n","/Users/marchewka/oss/react-native-ios-kit/src/components/Spinner.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/components/Stepper.js",["345","346","347","348","349","350","351"],"/* @flow */\nimport * as React from 'react';\nimport { StyleSheet, View, TouchableWithoutFeedback } from 'react-native';\n\nimport Icon from './Icon';\nimport { withTheme } from '../core/theming';\nimport type { Theme } from '../types/Theme';\n\ntype Props = {\n  /**\n   * Provided by the ThemeProvider\n   */\n  theme: Theme,\n  /**\n   * Callback function on changing counter result\n   */\n  onValueChange: (counter: number) => void,\n  /**\n   * The lowest possible numeric value for the stepper.\n   * Default value is 0.\n   */\n  minValue: number,\n  /**\n   * The highest possible numeric value for the stepper.\n   * The default value of this property is 100.\n   */\n  maxValue: number,\n  /**\n   * The numeric value of the stepper.\n   */\n  value: number,\n  /**\n   * The step, or increment, value for the stepper.\n   * The default value for this property is 1.\n   */\n  stepValue: number,\n};\n\ntype State = {\n  isDecrementing: boolean,\n  isIncrementing: boolean,\n};\n/**\n * Stepper component\n */\nclass Stepper extends React.Component<Props, State> {\n  static defaultProps = {\n    minValue: 0,\n    maxValue: 100,\n    stepValue: 1,\n  };\n  constructor(props: Props) {\n    super(props);\n    if (props.value < props.minValue) {\n      throw new Error('Value cannot be lower than minValue');\n    }\n    if (props.value > props.maxValue) {\n      throw new Error('Value cannot be higher than maxValue');\n    }\n    if (props.minValue > props.maxValue) {\n      throw new Error('minValue cannot be higher than maxValue');\n    }\n\n    this.state = {\n      isDecrementing: false,\n      isIncrementing: false,\n    };\n  }\n  componentWillUnmount() {\n    clearTimeout(this._timeout);\n    clearInterval(this._interval);\n  }\n\n  _interval: IntervalID;\n  _timeout: TimeoutID;\n\n  decrementOnCounter = () => {\n    const newValue = this.props.value - this.props.stepValue;\n    if (newValue >= this.props.minValue) {\n      this.props.onValueChange(newValue);\n    }\n  };\n\n  incrementOnCounter = () => {\n    const newValue = this.props.value + this.props.stepValue;\n    if (newValue <= this.props.maxValue) {\n      this.props.onValueChange(newValue);\n    }\n  };\n\n  handleIncrementPressIn = () => {\n    this.incrementOnCounter();\n    this._timeout = setTimeout(() => {\n      this.startInterval(this.incrementOnCounter);\n      this.setState({\n        isIncrementing: true,\n      });\n    }, 500);\n  };\n\n  handleDecrementPressIn = () => {\n    this.decrementOnCounter();\n    this._timeout = setTimeout(() => {\n      this.startInterval(this.decrementOnCounter);\n      this.setState({\n        isDecrementing: true,\n      });\n    }, 500);\n  };\n\n  handlePressOut = () => {\n    clearTimeout(this._timeout);\n    clearInterval(this._interval);\n    this.setState({\n      isDecrementing: false,\n      isIncrementing: false,\n    });\n  };\n\n  startInterval = (callback: Function, speed: number = 300) => {\n    let i = 0;\n    this._interval = setInterval(() => {\n      callback();\n      i += 1;\n      if (i === 10) {\n        clearInterval(this._interval);\n        this.startInterval(callback, speed / 2);\n      }\n    }, speed);\n  };\n\n  render() {\n    const { theme, value, minValue, maxValue } = this.props;\n    const { primaryColor, primaryLightColor } = theme;\n    const { isIncrementing, isDecrementing } = this.state;\n    const isMinimum = value === minValue;\n    const isMaximum = value === maxValue;\n    return (\n      <View style={[styles.container, { borderColor: primaryColor }]}>\n        <TouchableWithoutFeedback\n          onPressIn={this.handleDecrementPressIn}\n          onPressOut={this.handlePressOut}\n          disabled={isMinimum}\n        >\n          <View\n            style={[\n              {\n                borderColor: primaryColor,\n                backgroundColor:\n                  isMinimum || !isDecrementing\n                    ? 'transparent'\n                    : primaryLightColor,\n              },\n              styles.stepperIcon,\n              styles.stepperMinus,\n            ]}\n          >\n            <Icon\n              name=\"md-remove\"\n              size={20}\n              color={isMinimum ? primaryLightColor : primaryColor}\n              style={{ marginTop: 2 }}\n            />\n          </View>\n        </TouchableWithoutFeedback>\n\n        <TouchableWithoutFeedback\n          onPressIn={this.handleIncrementPressIn}\n          onPressOut={this.handlePressOut}\n          disabled={isMaximum}\n        >\n          <View\n            style={[\n              {\n                borderColor: primaryColor,\n                backgroundColor:\n                  isMaximum || !isIncrementing\n                    ? 'transparent'\n                    : primaryLightColor,\n              },\n              styles.stepperIcon,\n              styles.stepperPlus,\n            ]}\n          >\n            <Icon\n              name=\"md-add\"\n              size={20}\n              color={isMaximum ? primaryLightColor : primaryColor}\n              style={{ marginTop: 2 }}\n            />\n          </View>\n        </TouchableWithoutFeedback>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    width: 94,\n    height: 29,\n    borderWidth: StyleSheet.hairlineWidth * 2,\n    borderRadius: 4,\n    overflow: 'hidden',\n  },\n  stepperIcon: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n  },\n  stepperMinus: {\n    borderRightWidth: StyleSheet.hairlineWidth,\n  },\n  stepperPlus: {\n    borderLeftWidth: StyleSheet.hairlineWidth,\n  },\n});\n\nexport default withTheme(Stepper);\n","/Users/marchewka/oss/react-native-ios-kit/src/components/Switch.js",["352"],"/* @flow */\n\nimport React, { Component } from 'react';\nimport { Switch as ReactNativeSwitch } from 'react-native';\n\nimport { withTheme } from '../core/theming';\nimport type { Theme } from '../types/Theme';\n\ntype Props = {\n  // Disable switch\n  disabled?: boolean,\n  // Switch value\n  value?: boolean,\n  // Switch style\n  style?: Object,\n  // Provided by the ThemeProvider\n  theme: Theme,\n  // onChange prop\n  onValueChange?: (value: boolean) => *,\n  // Border color when the switch is turned on\n  trackColor?: string,\n  // Color of the foreground switch grip\n  thumbColor?: string,\n};\n\nclass Switch extends Component<Props> {\n  render() {\n    const { theme, onValueChange, trackColor, ...rest } = this.props;\n    return (\n      <ReactNativeSwitch\n        {...rest}\n        onValueChange={onValueChange}\n        // $FlowFixMe\n        trackColor={trackColor || theme.positiveColor}\n      />\n    );\n  }\n}\n\nexport default withTheme(Switch);\n","/Users/marchewka/oss/react-native-ios-kit/src/components/SwitchRow.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/components/TabBar.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/components/TableView/TableView.js",["353"],"/* @flow */\nimport * as React from 'react';\nimport { View } from 'react-native';\n\nimport TableViewHeader from './TableViewHeader';\nimport TableViewFooter from './TableViewFooter';\nimport { withTheme } from '../../';\nimport type { Theme } from '../../types/Theme';\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\n\ntype Props = {\n  /**\n   * Provided by the ThemeProvider\n   */\n  theme: Theme,\n  /**\n   * Header of TableView\n   */\n  header?: string,\n  /**\n   * Indicates whether render empty header or not\n   */\n  withoutHeader?: boolean,\n  /**\n   * Optional styles of header\n   */\n  headerStyle?: ViewStyleProp,\n  /**\n   * Footer of TableView\n   */\n  footer?: string,\n  /**\n   * Whether render empty footer or not\n   */\n  withoutFooter?: boolean,\n  /**\n   * Footer style\n   */\n  footerStyle?: ViewStyleProp,\n  /**\n   * onPress handler of Footer component\n   */\n  onFooterPress?: Function,\n  /**\n   * Children of TableView to render, e.g. RowItem's\n   */\n  children: React.ChildrenArray<*>,\n};\n\nclass TableView extends React.Component<Props> {\n  static defaultProps = {\n    header: '',\n    footer: '',\n  };\n\n  render() {\n    const {\n      header,\n      children,\n      footer,\n      withoutHeader,\n      withoutFooter,\n      headerStyle,\n      footerStyle,\n      onFooterPress,\n    } = this.props;\n    return (\n      <View>\n        {!withoutHeader && !!header && (\n          <TableViewHeader header={header} style={headerStyle} />\n        )}\n        {React.Children.map(children, (child, idx) =>\n          React.cloneElement(child, {\n            first: idx === 0,\n            last: idx === React.Children.count(children) - 1,\n          })\n        )}\n        {!withoutFooter && !!footer && (\n          <TableViewFooter\n            footer={footer}\n            onPress={onFooterPress}\n            style={footerStyle}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default withTheme(TableView);\n","/Users/marchewka/oss/react-native-ios-kit/src/components/TableView/TableViewFooter.js",["354"],"/* @flow */\nimport * as React from 'react';\nimport { View, StyleSheet, TouchableHighlight } from 'react-native';\n\nimport { withTheme } from '../../core/theming';\nimport { Footnote } from '../Typography';\nimport type { Theme } from '../../types/Theme';\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\n\ntype Props = {\n  footer: string,\n  theme: Theme,\n  style?: ViewStyleProp,\n  onPress?: Function,\n};\n\nclass TableViewFooter extends React.Component<Props> {\n  renderFooter = () => {\n    const { footer, theme, style, onPress } = this.props;\n    return (\n      <View\n        style={[\n          styles.footer,\n          { backgroundColor: theme.footnoteBackgroundColor },\n          style,\n        ]}\n      >\n        <Footnote\n          style={{ color: onPress ? theme.primaryColor : theme.footnoteColor }}\n        >\n          {footer}\n        </Footnote>\n      </View>\n    );\n  };\n\n  renderTouchableFooter = () => (\n    <TouchableHighlight onPress={this.props.onPress}>\n      {this.renderFooter()}\n    </TouchableHighlight>\n  );\n\n  render() {\n    return this.props.onPress\n      ? this.renderTouchableFooter()\n      : this.renderFooter();\n  }\n}\n\nexport default withTheme(TableViewFooter);\n\nconst styles = StyleSheet.create({\n  footer: {\n    paddingHorizontal: 15,\n    paddingTop: 7,\n    paddingBottom: 15,\n  },\n});\n","/Users/marchewka/oss/react-native-ios-kit/src/components/TableView/TableViewHeader.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/components/TableView/index.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/components/TextField.js",["355"],"/* @flow */\nimport * as React from 'react';\nimport { View, TextInput, StyleSheet, TouchableOpacity } from 'react-native';\n\nimport { withTheme } from '../';\nimport Icon from './Icon';\n\nimport type { Theme } from '../types/Theme';\nimport type {\n  TextStyleProp,\n  ViewStyleProp,\n} from 'react-native/Libraries/StyleSheet/StyleSheet';\n\ntype Props = {\n  theme: Theme,\n  placeholder?: string,\n  value: string,\n  clearButton?: boolean,\n  onValueChange?: (text: string) => void,\n  containerStyle?: ViewStyleProp,\n  inputStyle?: TextStyleProp,\n};\n\nclass TextField extends React.Component<Props> {\n  clearInput = () => this.props.onValueChange && this.props.onValueChange('');\n\n  render() {\n    const {\n      value,\n      placeholder,\n      onValueChange,\n      clearButton,\n      theme: {\n        backgroundColor,\n        dividerColor,\n        placeholderColor,\n        primaryColor,\n        textColor,\n      },\n      containerStyle,\n      inputStyle,\n      ...rest\n    } = this.props;\n    return (\n      <View\n        style={[\n          { backgroundColor, borderBottomColor: dividerColor },\n          styles.container,\n          containerStyle,\n        ]}\n      >\n        <TextInput\n          {...rest}\n          value={value}\n          placeholder={placeholder}\n          placeholderTextColor={placeholderColor}\n          onChangeText={onValueChange}\n          style={[styles.input, { color: textColor }, inputStyle]}\n          selectionColor={primaryColor}\n        />\n        {value && clearButton !== false ? (\n          <TouchableOpacity onPress={this.clearInput}>\n            <Icon\n              name=\"ios-close-circle\"\n              color={placeholderColor}\n              style={styles.clearIcon}\n              size={18}\n            />\n          </TouchableOpacity>\n        ) : null}\n      </View>\n    );\n  }\n}\n\nexport default withTheme(TextField);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 12,\n    paddingHorizontal: 15,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  input: {\n    fontSize: 18,\n    flexGrow: 1,\n    paddingRight: 15,\n  },\n  clearIcon: {\n    paddingRight: 9,\n    backgroundColor: 'transparent',\n    marginTop: 2,\n  },\n});\n","/Users/marchewka/oss/react-native-ios-kit/src/components/TextFieldRow.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/components/Toolbar.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/components/Typography/StyledText.js",["356","357","358"],"/* @flow */\n\nimport * as React from 'react';\nimport { Text, StyleSheet } from 'react-native';\n\nimport { withTheme } from '../../';\nimport type { Theme } from '../../types/Theme';\nimport type { TextStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\n\nconst trackingToSpacing = (fontSize: number, tracking: number): number =>\n  (fontSize * tracking) / 1000;\n\nconst resolveFontSizeFromStyle = (style?: TextStyleProp) => {\n  if (!style) {\n    return 0;\n  }\n\n  if (Array.isArray(style)) {\n    return style.reduce(\n      (acc, elem) => resolveFontSizeFromStyle(elem) || acc,\n      0\n    );\n  }\n\n  const realStyle =\n    typeof style === 'number' ? StyleSheet.flatten(style) : style;\n\n  return realStyle ? realStyle.fontSize : null;\n};\n\ntype Props = {\n  style?: any,\n  children?: any,\n  config: Object,\n  theme: Theme,\n};\n\nclass StyledText extends React.Component<Props> {\n  render() {\n    const { style, children, config, theme, ...rest } = this.props;\n    const fontSize = resolveFontSizeFromStyle(style) || config.fontSize;\n    const letterSpacing = trackingToSpacing(fontSize, config.tracking);\n\n    const calculatedStyle = {\n      fontSize,\n      fontWeight: config.fontWeight,\n      letterSpacing,\n      lineHeight: config.leading,\n      color: theme.textColor,\n    };\n    return (\n      <Text style={[calculatedStyle, style]} {...rest}>\n        {children}\n      </Text>\n    );\n  }\n}\n\nexport default withTheme(StyledText);\n","/Users/marchewka/oss/react-native-ios-kit/src/components/Typography/Typography.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/components/Typography/createText.js",["359"],"/**\n * @flow\n */\nimport React from 'react';\nimport StyledText from './StyledText';\n\ntype Config = {\n  fontSize: number,\n  tracking: number,\n  leading: number,\n  fontWeight: string,\n};\n\nconst createText = (config: Config) => (props: Object) => (\n  <StyledText {...props} config={config} />\n);\n\nexport default createText;\n","/Users/marchewka/oss/react-native-ios-kit/src/components/Typography/index.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/core/ThemeProvider.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/core/theming.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/index.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/styles/DarkTheme.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/styles/DefaultTheme.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/styles/colors.js",[],"/Users/marchewka/oss/react-native-ios-kit/src/types/Theme.js",[],"/Users/marchewka/oss/react-native-ios-kit/types.js",[],{"ruleId":"360","severity":1,"message":"361","line":99,"column":28,"nodeType":"362","endLine":99,"endColumn":48},{"ruleId":"363","severity":1,"message":"364","line":29,"column":14,"nodeType":"365","endLine":29,"endColumn":17},{"ruleId":"366","severity":1,"message":"367","line":45,"column":8,"nodeType":"362","endLine":52,"endColumn":4},{"ruleId":"366","severity":1,"message":"368","line":121,"column":25,"nodeType":"362","endLine":123,"endColumn":4},{"ruleId":"366","severity":1,"message":"369","line":69,"column":18,"nodeType":"362","endLine":71,"endColumn":4},{"ruleId":"363","severity":1,"message":"370","line":12,"column":14,"nodeType":"371","endLine":12,"endColumn":20},{"ruleId":"366","severity":1,"message":"367","line":74,"column":8,"nodeType":"362","endLine":78,"endColumn":4},{"ruleId":"360","severity":1,"message":"372","line":23,"column":22,"nodeType":"362","endLine":23,"endColumn":47},{"ruleId":"360","severity":1,"message":"372","line":26,"column":26,"nodeType":"362","endLine":26,"endColumn":51},{"ruleId":"360","severity":1,"message":"372","line":27,"column":26,"nodeType":"362","endLine":27,"endColumn":51},{"ruleId":"360","severity":1,"message":"372","line":28,"column":26,"nodeType":"362","endLine":28,"endColumn":51},{"ruleId":"360","severity":1,"message":"372","line":29,"column":26,"nodeType":"362","endLine":29,"endColumn":51},{"ruleId":"360","severity":1,"message":"372","line":31,"column":22,"nodeType":"362","endLine":31,"endColumn":47},{"ruleId":"366","severity":1,"message":"373","line":61,"column":20,"nodeType":"362","endLine":67,"endColumn":4},{"ruleId":"366","severity":1,"message":"374","line":68,"column":19,"nodeType":"362","endLine":73,"endColumn":4},{"ruleId":"360","severity":1,"message":"375","line":34,"column":18,"nodeType":"362","endLine":34,"endColumn":53},{"ruleId":"360","severity":1,"message":"376","line":64,"column":26,"nodeType":"362","endLine":64,"endColumn":46},{"ruleId":"366","severity":1,"message":"377","line":75,"column":8,"nodeType":"362","endLine":82,"endColumn":4},{"ruleId":"366","severity":1,"message":"378","line":85,"column":18,"nodeType":"362","endLine":88,"endColumn":4},{"ruleId":"366","severity":1,"message":"379","line":89,"column":12,"nodeType":"362","endLine":94,"endColumn":4},{"ruleId":"363","severity":1,"message":"380","line":40,"column":13,"nodeType":"371","endLine":40,"endColumn":21},{"ruleId":"363","severity":1,"message":"380","line":41,"column":15,"nodeType":"371","endLine":41,"endColumn":23},{"ruleId":"363","severity":1,"message":"380","line":42,"column":16,"nodeType":"371","endLine":42,"endColumn":24},{"ruleId":"363","severity":1,"message":"380","line":43,"column":17,"nodeType":"371","endLine":43,"endColumn":25},{"ruleId":"363","severity":1,"message":"364","line":51,"column":11,"nodeType":"365","endLine":51,"endColumn":14},{"ruleId":"363","severity":1,"message":"364","line":55,"column":16,"nodeType":"365","endLine":55,"endColumn":19},{"ruleId":"363","severity":1,"message":"364","line":59,"column":19,"nodeType":"365","endLine":59,"endColumn":22},{"ruleId":"363","severity":1,"message":"370","line":69,"column":11,"nodeType":"371","endLine":69,"endColumn":17},{"ruleId":"363","severity":1,"message":"370","line":73,"column":27,"nodeType":"371","endLine":73,"endColumn":33},{"ruleId":"366","severity":1,"message":"381","line":197,"column":14,"nodeType":"362","endLine":199,"endColumn":8},{"ruleId":"363","severity":1,"message":"364","line":17,"column":16,"nodeType":"365","endLine":17,"endColumn":19},{"ruleId":"363","severity":1,"message":"364","line":18,"column":19,"nodeType":"365","endLine":18,"endColumn":22},{"ruleId":"363","severity":1,"message":"364","line":21,"column":14,"nodeType":"365","endLine":21,"endColumn":17},{"ruleId":"363","severity":1,"message":"364","line":24,"column":14,"nodeType":"365","endLine":24,"endColumn":17},{"ruleId":"363","severity":1,"message":"364","line":32,"column":11,"nodeType":"365","endLine":32,"endColumn":14},{"ruleId":"363","severity":1,"message":"370","line":40,"column":16,"nodeType":"371","endLine":40,"endColumn":22},{"ruleId":"363","severity":1,"message":"370","line":44,"column":17,"nodeType":"371","endLine":44,"endColumn":23},{"ruleId":"363","severity":1,"message":"370","line":47,"column":27,"nodeType":"371","endLine":47,"endColumn":33},{"ruleId":"363","severity":1,"message":"364","line":47,"column":37,"nodeType":"365","endLine":47,"endColumn":40},{"ruleId":"363","severity":1,"message":"364","line":88,"column":43,"nodeType":"365","endLine":88,"endColumn":46},{"ruleId":"363","severity":1,"message":"370","line":121,"column":54,"nodeType":"371","endLine":121,"endColumn":60},{"ruleId":"363","severity":1,"message":"370","line":49,"column":17,"nodeType":"371","endLine":49,"endColumn":23},{"ruleId":"363","severity":1,"message":"364","line":50,"column":14,"nodeType":"365","endLine":50,"endColumn":17},{"ruleId":"363","severity":1,"message":"364","line":118,"column":26,"nodeType":"365","endLine":118,"endColumn":29},{"ruleId":"363","severity":1,"message":"364","line":26,"column":11,"nodeType":"365","endLine":26,"endColumn":14},{"ruleId":"363","severity":1,"message":"364","line":81,"column":17,"nodeType":"365","endLine":81,"endColumn":20},{"ruleId":"360","severity":1,"message":"382","line":27,"column":24,"nodeType":"362","endLine":27,"endColumn":69},{"ruleId":"366","severity":1,"message":"378","line":113,"column":22,"nodeType":"362","endLine":119,"endColumn":4},{"ruleId":"363","severity":1,"message":"380","line":39,"column":13,"nodeType":"371","endLine":39,"endColumn":21},{"ruleId":"360","severity":1,"message":"383","line":73,"column":11,"nodeType":"362","endLine":78,"endColumn":12},{"ruleId":"360","severity":1,"message":"384","line":85,"column":13,"nodeType":"362","endLine":88,"endColumn":14},{"ruleId":"360","severity":1,"message":"385","line":118,"column":15,"nodeType":"362","endLine":121,"endColumn":16},{"ruleId":"363","severity":1,"message":"364","line":19,"column":11,"nodeType":"365","endLine":19,"endColumn":14},{"ruleId":"363","severity":1,"message":"380","line":120,"column":30,"nodeType":"371","endLine":120,"endColumn":38},{"ruleId":"360","severity":1,"message":"386","line":147,"column":15,"nodeType":"362","endLine":153,"endColumn":16},{"ruleId":"366","severity":1,"message":"387","line":147,"column":15,"nodeType":"362","endLine":153,"endColumn":16},{"ruleId":"360","severity":1,"message":"388","line":162,"column":22,"nodeType":"362","endLine":162,"endColumn":38},{"ruleId":"360","severity":1,"message":"389","line":174,"column":15,"nodeType":"362","endLine":180,"endColumn":16},{"ruleId":"366","severity":1,"message":"390","line":174,"column":15,"nodeType":"362","endLine":180,"endColumn":16},{"ruleId":"360","severity":1,"message":"388","line":189,"column":22,"nodeType":"362","endLine":189,"endColumn":38},{"ruleId":"363","severity":1,"message":"370","line":15,"column":11,"nodeType":"371","endLine":15,"endColumn":17},{"ruleId":"363","severity":1,"message":"380","line":43,"column":19,"nodeType":"371","endLine":43,"endColumn":27},{"ruleId":"363","severity":1,"message":"380","line":14,"column":13,"nodeType":"371","endLine":14,"endColumn":21},{"ruleId":"366","severity":1,"message":"378","line":91,"column":14,"nodeType":"362","endLine":95,"endColumn":4},{"ruleId":"363","severity":1,"message":"364","line":32,"column":11,"nodeType":"365","endLine":32,"endColumn":14},{"ruleId":"363","severity":1,"message":"364","line":33,"column":14,"nodeType":"365","endLine":33,"endColumn":17},{"ruleId":"363","severity":1,"message":"370","line":34,"column":11,"nodeType":"371","endLine":34,"endColumn":17},{"ruleId":"363","severity":1,"message":"370","line":14,"column":48,"nodeType":"371","endLine":14,"endColumn":54},"react-native/no-inline-styles","Inline style: { paddingRight: 15 }","ObjectExpression","flowtype/no-weak-types","Unexpected use of weak type \"any\"","AnyTypeAnnotation","react-native/no-color-literals","Color literal: { borderBottomColor: '#333' }","Color literal: { borderColor: '#cdcdcd' }","Color literal: { backgroundColor: 'rgba(255,255,255,0.5)' }","Unexpected use of weak type \"Object\"","GenericTypeAnnotation","Inline style: { paddingHorizontal: 20 }","Color literal: { backgroundColor: '#007aff' }","Color literal: { backgroundColor: '#ff9500' }","Inline style: { width: 222, alignSelf: 'center' }","Inline style: { marginBottom: 25 }","Color literal: { borderBottomColor: '#666' }","Color literal: { backgroundColor: 'transparent' }","Color literal: { backgroundColor: 'transparent', color: 'white' }","Unexpected use of weak type \"Function\"","Color literal: { color: '#ffffff' }","Inline style: { paddingRight: 10 }","Inline style: { borderTopWidth: 'first ? StyleSheet.hairlineWidth : 0',\n  borderBottomWidth: 'last ? StyleSheet.hairlineWidth : 0' }","Inline style: { marginLeft: 'icon ? 15 : 0',\n  marginRight: 'title || subtitle ? 15 : 0' }","Inline style: { marginLeft: 'icon ? 54 : 15' }","Inline style: { backgroundColor:\n   'isMinimum || !isDecrementing\\n                    ? \\'transparent\\'\\n                    : primaryLightColor' }","Color literal: { backgroundColor:\n   'isMinimum || !isDecrementing\\n                    ? \\'transparent\\'\\n                    : primaryLightColor' }","Inline style: { marginTop: 2 }","Inline style: { backgroundColor:\n   'isMaximum || !isIncrementing\\n                    ? \\'transparent\\'\\n                    : primaryLightColor' }","Color literal: { backgroundColor:\n   'isMaximum || !isIncrementing\\n                    ? \\'transparent\\'\\n                    : primaryLightColor' }"]